#!/usr/bin/make -f
###############################################################################
#
# This file is part of libcommhistory.
#
# Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
# Contact: Reto Zingg <reto.zingg@nokia.com>
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License version 2.1 as
# published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
###############################################################################

# some commonly used local vars
comma:= ,
empty:=
space:= $(empty) $(empty)


# project specific
PROJECT_NAME:= libcommhistory
BUILD_DIR:= builddir


# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1


# custom C(XX)FLAGS
CFLAGS = -Wall -Werror -g

# by default make docs
MAKEDOCS = 1


ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
    CFLAGS += -O0
else
    CFLAGS += -O2
endif


#ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
#    INSTALL_PROGRAM += -s
#endif

# Don't build documentation by setting DEB_BUILD_OPTION=nodocs,...
ifneq (,$(findstring nodocs,$(DEB_BUILD_OPTIONS)))
     MAKEDOCS = 0
endif

# allow debug prints only with rtcom_debug flag enabled
ifeq (,$(findstring rtcom_debug,$(DEB_BUILD_OPTIONS)))
    EXTRA_QMAKE_OPTIONS += "DEFINES=QT_NO_DEBUG QT_NO_DEBUG_OUTPUT"
endif

# check for parallel parameter
ifneq (,$(findstring parallel=,$(DEB_BUILD_OPTIONS)))
    # DEB_BUILD_OPTIONS can't seem to make its mind with the list usage...
    # ...so replace commas with spaces before doing anything else
    PROPER_DEB_BUILD_OPTIONS := $(strip $(subst $(comma),$(space),$(DEB_BUILD_OPTIONS)))
    # get the number of jobs
    MAKE_PARALLEL_PARAMS := -j$(subst parallel=,$(empty),$(filter parallel=%,$(PROPER_DEB_BUILD_OPTIONS)))
endif

builddir:
	mkdir -p $(BUILD_DIR)

configure: configure-stamp
configure-stamp: builddir
	dh_testdir

	# Add here commands to configure the package.
	cd $(BUILD_DIR) && qmake "QMAKE_CXXFLAGS=$(CFLAGS)" $(EXTRA_QMAKE_OPTIONS) ../$(PROJECT_NAME).pro

	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp
	dh_testdir

	# Add here commands to compile the package.
	cd $(BUILD_DIR) && $(MAKE) $(MAKE_PARALLEL_PARAMS)

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	rm -r -f $(BUILD_DIR)
	rm -f -r debian/tmp

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

ifneq (0,$(MAKEDOCS))
	cd $(BUILD_DIR) && $(MAKE) $(MAKE_PARALLEL_PARAMS) docs
endif

	# Add here commands to install the package into debian/tmp.
	cd $(BUILD_DIR) && $(MAKE) INSTALL_ROOT=$(CURDIR)/debian/tmp $(MAKE_PARALLEL_PARAMS) install

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
#	dh_installexamples
	dh_install --sourcedir=debian/tmp
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_installman
	dh_link
	dh_strip --dbg-package=$(PROJECT_NAME)-dbg
	dh_compress --exclude=doc/libcommhistory/  # don't compress our documentation
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

aegis:
	aegis-deb-add -control debian/commhistory-utils/DEBIAN/control .. debian/commhistory-utils.aegis=_aegis
	aegis-deb-add -control debian/libcommhistory-tests/DEBIAN/control .. debian/libcommhistory-tests.aegis=_aegis
	aegis-deb-add -control debian/libcommhistory-performance-tests/DEBIAN/control .. debian/libcommhistory-performance-tests.aegis=_aegis

binary: binary-indep binary-arch aegis
.PHONY: build clean binary-indep binary-arch binary install configure


# End of File

